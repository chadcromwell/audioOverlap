/*
* Author: Chad Cromwell
* Date: Jun 1, 2019
* Description: A simple javascript library that facilitates easy audio overlapping with Audio objects. Useful for game development
*              where you need to replay the same sound in quick succession resulting in overlap. In addition to this, it provides
*              a useful background music player which will play through background music you add. It can shuffle these tracks
*              where it will play a random track once one finishes, however it makes sure it does not repeat the same song twice
*              in a row. You may disable the shuffle option if you do not want to use it.
*
* Functions:    addMusic(key, pathToAudioFile) - Accepts a key for easy array lookup, path to the audio file. Use this function to add background music to your pool of music.
*               addSFX(key, pathToAudioFile, number) - Accepts a key for easy array lookup, path to the audio file, and number of times you want this audio file to be able to overlap. Use this function to add sound effects to your pool of sound effects.
*               playSFX(key) - Accepts a key and plays the corresponding sound effect if it is available from the SFX pool. Use this function to play a sound effect. Simply pass the key you used with addSFX() and it will play.
*               playNextSong() - Plays the next song once track finishes playing. Call this function once with loopThroughMusic as true (default is true) and it will loop through your music. Shuffle is on by default. You have the ability to disable loopThroughMusic, however you'll then need to call other functions manually and this again each time you want to play a song.
*               setFirstTrack(key) - Accepts a key and sets that track to be the first played. Use this function to set the first track that is played if you so desire. If not called, the first track you added will be played first.
*               shuffleOn() - Turns shuffle on. Shuffle is on by default. Shuffle will shuffle your music tracks and make sure that the same song is not repeated in a row
*               shuffleOff() - Turns shuffle off. Useful if you want your music to play in a specific order. Be sure to call addMusic() in the order you wish your music to be played.
*               setMusicVolume(volume, key) - Accepts either both a volume and key parameter or just a volume parameter. The key is used to find the corresponding music track and the volume (number) is used to set that corresponding key to that volume. If only volume is passed, it will set the volume for all tracks.
*               setSFXVolume(volume, key) - Accepts either both a volume and key parameter or just a volume parameter. The key is used to find the corresponding sound effect and the volume (number between 0 and 1) is used to set that corresponding sound effect to that volume. If only volume is passed, it will set the volume for all sound effects.
*               toggleSFX() - Toggles sound effects on or off depending on its current state. Useful for mute/unmute buttons.
*               SFXOn() - Turns on sound effects. Used by toggleSFX(). Useful for a sound effect "on" button.
*               SFXOff() - Turn off sound effects. Used by toggleSFX(). Useful for a sound effect "off" button.
*               toggleMusic() - Toggles music to play or pause depending on its current state. Useful for play/pause or mute/unmute buttons.
*               loopMusicOn() - Causes music to keep playing, once a song is done a new one will play. Music if looped by default. It is highly recommended you do not "unloop" it unless you fully understand how this code works.
*               loopMusicOff() - Causes music to stop playing after one track is played. Music if looped by default. It is highly recommended you do not call this unless you fully understand how this code works.
*/